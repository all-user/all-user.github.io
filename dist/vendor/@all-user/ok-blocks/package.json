{
  "name": "@all-user/ok-blocks",
  "version": "0.0.1",
  "description": "Generate blocks consists of 3x3 elements.",
  "main": "index.js",
  "scripts": {
    "test": "testem",
    "build:patterns:lines:js": "browserify -t [ babelify --optional runtime ] ./src/js/patterns/Lines/index.js -o ./src/patterns/Lines/index.js",
    "build:patterns:olympic:js": "browserify -t [ babelify --optional runtime ] ./src/js/patterns/Olympic2020/index.js -o ./src/patterns/Olympic2020/index.js",
    "build:patterns:js": "npm run build:patterns:lines:js & npm run build:patterns:olympic:js",
    "build:patterns:css:Olympic2020": "stylus -c ./src/stylus/patterns/Olympic2020/index.styl -o ./src/patterns/Olympic2020/bundle.css -m",
    "build:patterns:css:Lines": "stylus -u nib -c ./src/stylus/patterns/Lines/index.styl -o ./src/patterns/Lines/bundle.css -m",
    "build:patterns:css": "npm run build:patterns:css:Olympic2020 & npm run build:patterns:css:Lines",
    "watch:patterns:js": "watch \"npm run build:patterns:js\" ./src/js/patterns",
    "watch:patterns:css": "watch \"npm run build:patterns:css\" ./src/stylus/patterns",
    "build:js": "browserify -t [ babelify --optional runtime ] ./src/js/index.js -d | exorcist ./src/bundle.js.map > ./src/bundle.js",
    "watch:js": "watchify -v -t [ babelify --optional runtime ] ./src/js/index.js -o \"exorcist ./src/bundle.js.map > ./src/bundle.js\" -d",
    "release:js": "browserify -t [ babelify --optional runtime ] ./src/js/index.js | uglifyjs > ./dist/bundle.js",
    "release:patterns": "ncp ./src/patterns ./dist/patterns",
    "release:clean": "trash ./dist",
    "release:mkdir": "mkdirp ./dist && npm run release:clean && mkdirp ./dist",
    "release": "npm run release:mkdir && npm run release:js && npm run release:patterns",
    "watch": "npm run watch:js & npm run watch:patterns:js & npm run watch:patterns:css",
    "start": "npm run watch"
  },
  "author": {
    "name": "Keita Okamoto",
    "email": "ok@aaa.email.ne.jp"
  },
  "license": "MIT",
  "devDependencies": {
    "append-css": "^0.1.6",
    "babel-plugin-espower": "^1.0.0",
    "babel-runtime": "^5.8.25",
    "babelify": "^6.1.3",
    "browserify": "^11.0.1",
    "copyfiles": "*",
    "exorcist": "^0.4.0",
    "mkdirp": "*",
    "mocha": "^2.2.5",
    "ncp": "*",
    "nib": "^1.1.0",
    "power-assert": "^0.11.0",
    "stylus": "^0.52.0",
    "testem": "*",
    "trash": "*",
    "uglify-js": "^2.4.24",
    "watch": "^0.16.0",
    "watchify": "^3.3.1"
  },
  "dependencies": {
    "xtend": "^4.0.0"
  },
  "readme": "# SquarePatterner\n\nGenerate emblem composed of 3x3 elements.\n\n## Usage\n\n```shell\nnpm i minimas\n```\n\n```html\n<head>\n    <script src=\"path/to/square-patterner/dist/bundle.js\"></script>\n    <link rel=\"stylesheet\" href=\"path/to/square-patterner/dist/bundle.css\">\n</head>\n<body>\n    <script>\n        var { Emblem, EmblemGroup } = SquarePatterner;\n        var emb = Emblem('a', { size: 300 }); // initial charactor and size in px.\n\n        document.addEventListener('DOMContentLoaded', function() {\n\n            emb.appendTo(document.body);\n            // or other way.\n            // document.body.appendChild(emb.dom);\n            // emb.dom is instance of DOMElement.\n\n            emb.to('z'); // change to another charactor.\n\n            emb.animateFromString(\"abc123!'.:;/_\"); // animate from string.\n\n            // grouping\n            var group = new EmblemGroup('from any message.');\n\n            group.appendTo(document.body);\n        });\n    </script>\n</body>\n```\n\n## Documentation\n\n- [__`Emblem`__]()\n- [__`EmblemGroup`__]()\n",
  "readmeFilename": "README.md",
  "gitHead": "f67545b9cc6a833b8327d7448ffd46224b2a33dc",
  "_id": "@all-user/ok-blocks@0.0.1",
  "_shasum": "c0f91deff68e942cc9ab8ffe5ff2e9e3f3a6dbd4",
  "_from": "../ok-blocks",
  "_resolved": "file:../ok-blocks"
}
